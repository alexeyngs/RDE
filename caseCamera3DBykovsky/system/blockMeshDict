/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //






meshGenApp blockMesh;
convertToMeters 0.001;

//----------------------------------------------------------
// Настройки
// Коэфициент перед периодом
// Толщина зазора камеры сгорания
// Добавочная толщина зазора коллектора
// Внешний диаметр
// Длина камеры сгорания
// Длина коллектора
//Ячейки:
// Количество ячеек по периметру
// Количество ячеек вдоль радиуса коллектора
// Количество ячеек вдоль камеры сгорания
// Количество ячеек вдоль оси коллектора
// Количество ячеек вдоль оси камеры сгорания
// Конец настроек
//----------------------------------------------------------

 // Общая длина
 // Максимальный радиус
 // Средний радиус
 // Минимальный радиус








/*
blockMesh параметры:
Минимальный радиус - 130 мм
Максимальный радиус - 153 мм
Длина цилиндра - 707 мм
Количество ячееу по периметру - 300
Количество ячееу вдоль радиуса - NRadius
Количество ячееу вдоль оси - NLength
*/

vertices
(
    // Вход в коллектор
    ( 130  0.0 707) // 0
    ( 0.0  130 707) // 1
    (-130  0.0 707) // 2
    ( 0.0 -130 707) // 3

    ( 153  0.0 707) // 4
    ( 0.0  153 707) // 5
    (-153  0.0 707) // 6
    ( 0.0 -153 707) // 7

    // Выход из коллектора - вход в камеру сгорания
    ( 130  0.0 665) // 8
    ( 0.0  130 665) // 9
    (-130  0.0 665) // 10
    ( 0.0 -130 665) // 11

    ( 153  0.0 665) // 12
    ( 0.0  153 665) // 13
    (-153  0.0 665) // 14
    ( 0.0 -153 665) // 15

    ( 153  0.0 665) // 16
    ( 0.0  153 665) // 17
    (-153  0.0 665) // 18
    ( 0.0 -153 665) // 19

    // Выход из камеры сгорания
    ( 130  0.0 0.0) // 20
    ( 0.0  130 0.0) // 21
    (-130  0.0 0.0) // 22
    ( 0.0 -130 0.0) // 23

    ( 153  0.0 0.0) // 24
    ( 0.0  153 0.0) // 25
    (-153  0.0 0.0) // 26
    ( 0.0 -153 0.0) // 27

    ( 153  0.0 0.0) // 28
    ( 0.0  153 0.0) // 29
    (-153  0.0 0.0) // 30
    ( 0.0 -153 0.0) // 31
);

blocks
(
    // Коллектор
    // I четверть - верх-право
    hex (8 12 13 9 0 4 5 1) blockUPRIGHT (10 75 2) simpleGrading (1 1 1)
    // II четверть - верх-лево
    hex (9 13 14 10 1 5 6 2) blockUPLEFT (10 75 2) simpleGrading (1 1 1)
    // III четверть - низ-лево
    hex (10 14 15 11 2 6 7 3) blockDOWNLEFT (10 75 2) simpleGrading (1 1 1)
    // IV четверть - низ-право
    hex (11 15 12 8 3 7 4 0) blockDOWNRIGHT (10 75 2) simpleGrading (1 1 1)

    // Камера сгорания
    // I четверть - верх-право
//    hex (8 16 17 9 20 28 29 21) blockUPRIGHT (NCamera NSection NRadiusCamera) simpleGrading (1 1 1)
    // II четверть - верх-лево
//    hex (9 17 18 10 21 29 30 22) blockUPLEFT (NCamera NSection NRadiusCamera) simpleGrading (1 1 1)
    // III четверть - низ-лево
//    hex (10 18 19 11 22 30 31 23) blockDOWNLEFT (NCamera NSection NRadiusCamera) simpleGrading (1 1 1)
    // IV четверть - низ-право
//    hex (11 19 16 8 23 31 28 20) blockDOWNRIGHT (NCamera NSection NRadiusCamera) simpleGrading (1 1 1)
);

//create the quarter circles
edges
(
    // Дуги для Z = вход в коллектор
    // I четверть - верх-право
    arc 0 1 ( 91.9238815542533  91.923881554249 0.0)
    arc 4 5 ( 108.187337521544  108.187337521539 0.0)
    // II четверть - верх-лево
    arc 1 2 (-91.9238815542533  91.923881554249 0.0)
    arc 5 6 (-108.187337521544  108.187337521539 0.0)
    // III четверть - низ-лево
    arc 2 3 (-91.9238815542533 -91.923881554249 0.0)
    arc 6 7 (-108.187337521544 -108.187337521539 0.0)
    // IV четверть - низ-право
    arc 3 0 ( 91.9238815542533 -91.923881554249 0.0)
    arc 7 4 ( 108.187337521544 -108.187337521539 0.0)

    // Дуги для Z = вход в камеру сгорания
    // I четверть - верх-право
    arc 8 9  ( 91.9238815542533  91.923881554249 665)
    arc 12 13( 108.187337521544  108.187337521539 665)
//    arc 16 17( PositionXlarge  PositionYlarge CameraHeight)
    // II четверть - верх-лево
    arc 9 10 (-91.9238815542533  91.923881554249 665)
    arc 13 14(-108.187337521544  108.187337521539 665)
//    arc 17 18(-PositionXlarge  PositionYlarge CameraHeight)
    // III четверть - низ-лево
    arc 10 11(-91.9238815542533 -91.923881554249 665)
    arc 14 15(-108.187337521544 -108.187337521539 665)
//    arc 18 19(-PositionXlarge -PositionYlarge CameraHeight)
    // IV четверть - низ-право
    arc 11 8 ( 91.9238815542533 -91.923881554249 665)
    arc 15 12( 108.187337521544 -108.187337521539 665)
//    arc 19 16( PositionXlarge -PositionYlarge CameraHeight)
);

boundary
(
    inlet // Когда Z = Length
    {
        type patch;
        faces
        (
            (0 4 5 1)
            (1 5 6 2)
            (2 6 7 3)
            (3 7 4 0)
        );
    }
    outlet // Когда Z = 0
    {
        type patch;
        faces
        (
            (8 12 13 9)
            (9 13 14 10)
            (10 14 15 11)
            (11 15 12 8)
        );
    }
    walls
    {
        type wall;
        faces
        (
            // I четверть - верх-право
            (0 1 9 8)
            (4 5 13 12)
            // II четверть - верх-лево
            (1 2 10 9)
            (5 6 14 13)
            // III четверть - низ-лево
            (2 3 11 10)
            (6 7 15 14)
            // IV четверть - низ-право
            (3 0 8 11)
            (7 4 12 15)
        );
    }
/*
    walls
    {
        type wall;
        faces
        (
            // I четверть - верх-право
            (12 16 17 13)
            // II четверть - верх-лево
            (13 17 18 14)
            // III четверть - низ-лево
            (14 18 19 15)
            // IV четверть - низ-право
            (15 19 16 12)
        );
    }
*/
);
mergePatchPairs
(
);